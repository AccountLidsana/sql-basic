use ວິຊາ ລະບົບບໍລິຫານຖານຂໍ້ມູນ MySQL
1. ຖານຂໍ້ມູນ (Database) ແມ່ນຫຍັງ?
ບ່ອນເກັບຮັກສາຂໍ້ມູນ
2. ລະບົບບໍລິຫານຖານຂໍ້ມູນ MySQL
MySQL ແມ່ນເປັນໂປຣແກຣມລະບົບບໍລິຫານຖານຂໍ້ມູນ RDBMS (Relational Database Management System)
ເປັນລະບົບບໍລິຫານຖານຂໍ້ມູນມີຄວາມສຳພັນກັນ (ໝາຍເຖິງຂໍ້ມູນທີ່ມີຄວາມສຳພັນກ່ຽວຂ້ອງກັນ) ເຊິ່ງນໍາໃຊ້ພາສາ SQL ເພື່ອໃຊ້ຈັດການຖານຂໍ້ມູນ.
ລະບົບບໍລິຫານຂໍ້ມູນທີ່ນໍາໃຊ້ມີ: MySQL, MS Access, Oracle, Informix, Sybase, PostgreSQL....
3. XAMPP
ເປັນຊອບແວຣ ແພັກເກັດ ທີ່ຈໍາລອງເຄື່ອງຕົວເອງ ເປັນເວັບເຊີເວີ ຊຶ່ງໃນນັ້ນປະກອບດ້ວຍ:
- X	= Windows
- A 	= Apache ເປັນເວັບເຊີເວີ
- M 	= MySQL ເປັນລະບົບບໍລິຫານຖານຂໍ້ມຸນ
- P 	= PHP 	ເປັນພາສາໂປຣແກຣມມິ່ງ
- P 	= Perl 	ເປັນພາສາໂປຣແກຣມມິ່ງ
4. xampp ປະກອບມີຫຍັງແດ່?
	xampp ປະກອບມີ: Apache, MySQL, Filezilla, Mercury, Tomcat
	- Apache			ເປັນເຊີເວີທີ່ໃຫ້ບໍລິຫານເວັບ
	- MySQL			ເປັນລະບົບບໍລິຫານຖານຂໍ້ມູນ
	- FileZilla			ເປັນຕົວອັບໂຫຼດຟາຍ ຫຼື ສົ່ງຂໍ້ມູນໄປຫາ Server
	- Mercury			ຕົວສົ່ງອີເມລ
	- Tomcat			ເປັນເຊີເວີສຳຫຼັບ Java
5. ການເຂົ້ານໍາໃຊ້ ລະບົບບໍລິຫານຖານຂໍ້ມູນ MySQL
ກົດປຸ່ມ Start ==> CMD ==> ແລ້ວພິມຄໍາດັ່ງນີ້:
ຊ່ອງທີ່ເຮົາລົງ xampp/ຊື່ໂຟລເດີທີ່ລົງ xampp/mysql/bin/mysql -u root
ຕົວຢ່າງ: ຖ້າເຮົາລົງ xampp ໃນຊ່ອງ D ແລະ ຢູ່ໃນໂຟລເດີ xampp ເຮົາຕ້ອງຂຽນແບບນີ້
D:/xampp/mysql/bin/mysql -u root ແລ້ວກົດ Enter
6. ການຕັ້ງຄ່າ Environment Variable ເພື່ອໃຫ້ງ່າຍຕໍ່ການເຂົ້າເຖິງຖານຂໍ້ມູນ
ວິທີການຕິດຕັ້ງ: ຄລິກຂວາ This PC ==> Properties ==> Environment Variables ==> ເລືອກ Path ຢູ່ຫ້ອງ System Variable ==> Edit ==> ເລືອກ New ==> ຫຼັງຈາກນັ້ນກໍານົດທີ່ຢູ່ດັ່ງຕົວຢ່າງລຸ່ມນີ້:
D:\xampp\mysql\bin\ ຈາກນັ້ນເຂົ້າຫາຖານຂໍ້ມູນໂດຍການຂຽນແບບສັ້ນໆຄື: ພິມ mysql -u root ຢູ່ໃນ CMD 
ໝາຍເຫດ: ທຸກຄັ້ງທີ່ຈະເຂົ້າເຖິງຖານຂໍ້ມູນ ຕ້ອງ start Mysql ຢູ່ໃນ Xampp Control Panel ກ່ອນ ຫຼັງຈາກນັ້ນກົດປຸ່ມ Start ==> CMD ==> mysql -u root
===================
ບົດທີ 2
1. ພາສາ SQL
		SQL ຫຍໍ້ມາຈາກ Structured Query Languange.  SQL
ເປັນພາສາໃນການໃຊ້ບໍລິຫານຖານຂໍ້ມູນເຊິ່ງເປັນພາສາມາດຕະຖານສາກົນຂອງລະບົບບໍລິຫານຖານຂໍ້ມູນທີ່ມີຄວາມສໍາພັນກັນ ແລະ ເປັນພາສາທີ່ຍອມຮັບຫຼາຍທີ່ສຸດໃນໂລກ.
2. ຄຸນປະໂຫຍດຂອງ SQL 
		ພາສາ SQL ແມ່ນມີຄວາມສໍາຄັນໃນການໃຊ້ງານຮ່ວມກັບຖານຂໍ້ມູນໂດຍສະເພາະທຸລະກິດທີ່ໃຊ້ຂໍ້ມູນຈໍານວນຫຼາຍໃນການຂັັບເຄື່ອນ ແລະ ຕ້ອງການທໍາການຕະຫຼາດໄລຍະຍາວ ການນໍາໃຊ້ SQL ເຂົ້າມາປະຍຸກໃຊ້ກັບຖານຂໍ້ມູນແທນ Excel ແບບປົກກະຕິຈະຊ່ວຍເພີ່ມຄວາມໄວໃນການທໍາງານ,ການຕັດສິນໃຈ ແລະ ການຈັດການຂໍ້ມູນໂດຍລວມຂອງບໍລິສັດໄດ້ຢ່າງຫຼວງຫຼາຍ
3. ປະເພດຄໍາສັ່ງໃນ SQL 
		ມີ 3 ປະເພດຄື: 
			- DDL: Data Difinition Languange
			- DML: Data Minifulation Languange
			- DCL: Data Control Languange
3.1. ປະເພດຄໍາສັງ: DDL (Data Difinition Languange).
		DDL ເປັນປະເພດຄໍາສັ່ງທີ່ໃຊ້ຈັດການກ່ຽວກັບໂຄງສ້າງ ຖານຂໍ້ມູນ ແລະ ຕາຕະລາງ ເຊັ່ນ: ການສ້າງຖານຂໍ້ມູນ ແລະ ການສ້າງຕາຕະລາງ, ການແກ້ໄຂຕາຕະລາງ DDL (Data Difinition Languange) ມີຄໍາສັ່ງດັ່ງນີ້:
		- create : ເປັນຄໍາສັ່ງ ສ້າງຖານຂໍ້ມູນ, ຕາຕະລາງ ແລະ ອື່ນໆ.
		- drop : ເປັນຄໍາສັ່ງລົບໂຄງສ້າງໃນຖານຂໍ້ມູນ.
		- alter : ເປັນຄໍາສັ່ງ ແກ້ໄຂ ຫຼື ປ່ຽນ ຟິວ.
		- truncate : ເປັນຄໍາສັ່ງ ລ້າງຂໍ້ມູນໃນຕາຕະລາງ.
3.2 ປະເພດຄໍາສັ່ງ: DML: Data Manipulation Languange.
		DML ເປັນປະເພດຄໍາສັ່ງໃຊ້ຈັດການກ່ຽວກັບຂໍ້ມູນທີ່ມີຢູ່ໃນຕາຕະລາງ ເຊັ່ນ: ການບັນທຶກຂໍ້ມູນ, ການແກ້ໄຂຂໍ້ມູນ, ລາຍງານຂໍ້ມູນ DML ປະກອບມີຄໍາສັ່ງຄື:
		- insert : ເປັນຄໍາສັ່ງ ບັນທຶກຂໍ້ມູນເຂົ້າໃນຕາຕະລາງ.
		- select : ເປັນຄໍາສັ່ງ ເລືອກຂໍ້ມູນມາສະແດງ.
		- update : ເປັນຄໍາສັ່ງ ແກ້ໄຂ ຫຼື ປ່ຽນແປງຂໍ້ມູູນ.
		- delete : ເປັນຄໍາສັ່ງລົບຂໍ້ມູນ.
3.3. ປະເພດຄໍາສັ່ງ: DCL: Data Control Languange.
		DCL ເປັນປະເພດຄໍາສັ່ງທີ່ໃຊ້ໃນການຄວບຄຸມການເຂົ້າເຖິງຖານຂໍ້ມູນ DCL ປະກອບມີຄໍາສັ່ງດັ່ງນີ້:
		- grant : ກໍານົດສິດທີ.
		- revoke : ຍົກເລິກສິດທີ.
4. ປະເພດຂໍ້ມູນໃນພາສາ SQL. 
		- int ເກັບການຂໍ້ມູນເປັນເລກຖ້ວນ.
		- decimal ເກັບກໍາຂໍ້ມູນເປັນເລກເສດ. 
		- varchar ເກັບຂໍ້ມູນເປັນຕົວອັກສອນ ແລະ ເຄື່ອງໝາຍຕ່າງໆ....(ຫ້ອງຕາຕະລາງຈະຫຍໍ້ ຫຼື ຂະຫຍາຍຕາມຂໍ້ມູນ).
		- char ເກັບກໍາຂໍ້ມູນເປັນຕົວອັກສອນ ແລະ ເຄື່ອງໝາຍ....(ຫ້ອງຕາຕະລາງຈະບໍ່ຫຍໍ້ ຫຼື ຂະຫຍາຍຕາມຂໍ້ມູນ).
		- text ເກັບຂໍ້ມູນເປັນຕົວອັກສອນ ຫຼື ເຄື່ອງໝາຍ....
		- time ເກັບກໍາຂໍ້ມູນເປັນເວລາ.
		- date ເກັບກໍາຂໍ້ມູນເປັນວັນທີເດືອນປີ.
		- datetime ເກັບກໍາຂໍ້ມູນເປັນ ວັນທີ ແລະ ເວລາ.
===================
ບົດທີ 3
1. ການນໍາໃຊ້ຄໍາສັ່ງ Create
		create : ເປັນຄໍາສັ່ງສ້າງຖານຂໍ້ມູນ, ຕາຕະລາງ ແລະ ອື່ນໆ.
		+ ຮູບແບບການສ້າງຖານຂໍ້ມູນ:
			Create database ຊື່ຖານຂໍ້ມູນ(ກໍານົດຊື່ເອງ);
		ຕົວຢ່າງ: ຈົ່ງສ້າງຖານຂໍ້ມູນຊື່ວ່າ: db_test
		create database db_test;
ວຽກບ້ານ: ຈົ່ງສ້າງຖານຂໍ້ມູນຊື່ວ່າ BCT1 ຈົນຮອດ BCT5 5 ເທື່ອ (ຂຽນໃສ່ເຈ້ຍ)
create database BCT1;
create database BCT2;
create database BCT3;
create database BCT4;
create database BCT5;
	ບົດເຝິກຫັດ: ຈົ່ງສ້າງຖານຂໍ້ມູນໃສ່ຊື່ຕົນເອງ
	+ ການສ້າງຖານຂໍ້ມູນໃຫ້ຊັບພອດພາສາຕ່າງດ້າວ(ພາສາລາວ UTF-8)
	ຮູບແບບ:
	create database ຊື່ຖານຂໍ້ມູນ(ກໍານົດຊື່ເອງ) default character set utf8 collate utf8_general_ci;
ຕົວຢ່າງ: ຈົ່ງສ້າງຖານຂໍ້ມູນຊື່ວ່າ db_evening ໃຊ້ຊັບພອດພາສາລາວ
	+ ຄໍາສັ່ງກວດສອບຖານຂໍ້ມູນທັງໝົດທີ່ເຮົາສ້າງ
	show databases;
	ໝາຍເຫດ: ທຸກຄັ້ງທີ່ໃຊ້ show ຕ້ອງມີ s ຢູ່ທ້າຍ(databases, tables...)
+ຮູບແບບການສ້າງຕາຕະລາງ:
		create table ຊື່ຕາຕະລາງ (ກໍານົດຊື່ເອງ) ( 
		field1 ປະເພດຂໍ້ມູນ(ຈໍານວນ) not null,
		field2 ປະເພດຂໍ້ມູນ(ຈໍານວນ) not null,
		field2 ປະເພດຂໍ້ມູນ(ຈໍານວນ) not null
		)default charset=UTF-8;
	ການສ້າງຕາຕະລາງ ແມ່ນຈະຕ້ອງກໍານົດປະເພດຂໍ້ມູນໃຫ້ກັບຫົວຂໍ້ (Field) ຂອງແຕ່ລະຂໍ້ມູນໃຫ້ຖືກຕ້ອງ ແລະ ເໝາະສົມຕາມຂໍ້ມູນທີ່ຈະບັນທຶກນັ້ນ.
ທຸກຄັ້ງທີ່ຈະສ້າງຕາຕະລາງຕ້ອງທໍາການນໍາໃຊ້ຖານຂໍ້ມູນກ່ອນເພື່ອຮູ້ວ່າເຮົາຈະຈັດການຂໍ້ມູນນັ້ນກັບຖານອັນໃດ.
		- ຕົວຢ່າງ: ຈົ່ງສ້າງຕາຕະລາງຊື່ວ່າ: address ເພື່ອເກັບກໍາຂໍ້ມູນທີ່ຢູ່ ເຊັ່ນ:
			ລະຫັດ, ຊື່, ນາມສະກຸນ, ເພດ, ວັນເດືອນປີເກີດ, ບ້ານ, ເມືອງ, ແຂວງ, ເບີໂທ.
# ຂັ້ນຕອນການສ້າງຕາຕະລາງ:
- use ຊື່ຖານຂໍ້ມູນ
- create table address(
id int(3) not null,
fname varchar(30) not null,
lname varchar(30) not null,
gender varchar(7) not null,
dob date not null,
vill varchar(30) not null,
dis varchar(30) not null,
pro varchar(30) not null,
tel varchar(15) not null
)default charset=utf8;
ວຽກບ້ານ:
ຈົ່ງສ້າງຖານຂໍ້ມູນຊື່ວ່າ db_student ໃຫ້ໃຊ້ຊັບພອດພາສາລາວ ຫຼັງຈາກນັ້ນໃຫ້ສ້າງຕາຕະລາງຂື້ນມາເພື່ອເກັບກໍາເອົາຂໍ້ມູນນັກສຶກສາ ເຊິ່ງມີຂໍ້ມູນດັ່ງນີ້:
ລະຫັດນັກສຶກສາ, ຊື່, ນາມສະກຸນ, ຄະແນນ, ໝາຍເຫດ
use suphansa_pimmasone;
create table db_student(
id int(3) not null,
fname varchar(30) not null,
lname varchar(30) not null,
score decimal(1.1) not null,
demark varchar(50) not null
)default charset=utf8;
+ ຄໍາສັ່ງອື່ນໆ:
		- use ຊື່ຖານຂໍ້ມູນ		ແມ່ນຄໍາສັ່ງເຂົ້ານໍາໃຊ້ຖານຂໍ້ມູນ
		- show tables		ແມ່ນຄໍາສັ່ງສະແດງຕາຕະລາງໃນຖານຂໍ້ມູນ
		- desc ຊື່ຕາຕະລາງ	ແມ່ນຄໍາສັ່ງກວດສອບໂຄງສ້າງຂອງຕາຕະລາງ
		ສະຫຼຸບ:
		ເລືອກນໍາໃຊ້ຖານຂໍ້ມູນໃດໜຶ່ງ:
		use ຊື່ຖານຂໍ້ມູນ;
		ຕົວຢ່າງ: ຈົ່ງເລືອກນໍາໃຊ້ ຖານຂໍ້ມູນ db_evening
			use db_evening;
		ກວດສອບເບິ່ງໂຄງສ້າງຕາຕະລາງ.
			desc ຊື່ຕາຕະລາງ;
		ຕົວຢ່າງ: ເບິ່ງໂຄງສ້າງຂອງຕາຕະລາງຊື່ວ່າ: address;
			desc address;
		ກວດສອບຕາຕະລາງທັງໝົດ
			show tables;
ວຽກບ້ານ:
ຈົ່ງຂຽນໂຄງສ້າງຕາຕະລາງໃສ່ເຈ້ຍ 3 ເທື່ອ
2. ການນໍາໃຊ້ຄໍາສັ່ງ alter
		ຄໍາສັ່ງ alter ປະກອບມີ:
			- add ເພີ່ມ
			- after ຫຼັງ
			- first ທໍາອິດ
			- change ປ່ຽນແປງຊື່ຟິວ
			- modify ປ່ຽນແປງປະເພດຂໍ້ມູນ
			- drop ລົບ
			- rename ປ່ຽນແປງຊື່ຕາຕະລາງ
# ຮູບແບບການເພີ່ມຟິວໃນຕາຕະລາງ
		alter table ຊື່ຕາຕະລາງ add ຊື່ຟິວ ປະເພດຂໍ້ມູນ;
		ຕົວຢ່າງ: ຈົ່ງເພີ່ມຟິວຊື່ວ່າ nname ເຂົ້າໄປໃນຕາຕະລາງ address
		alter table address add nname varchar(30) not null;
alter table address add nname varchar(30)  not null;  ໃນກໍລະນີຢາກໃຫ້ nname ໄປຢູ່ຫຼັງ field lname
==> alter table address add nname varchar(30) not null after lname;
ໃນກໍລະນີຢາກໃຫ້ nname ໄປຢູ່ທາງໜ້າສຸດ
==> alter table address add nname varchar(30) not null first;
ບົດເຝິກຫັດ ຈົ່ງເພິ່ມຟິວສະຖານະເຂົ້າໄປໃນຕາຕະລາງ address
==> alter table address add status varchar(15) not null;
#ຮູບແບບການປ່ຽນຊຶ່ຟິວ
		alter table ຊື່ຕາຕະລາງ change ຊື່ field ເກົ່າ ຊື່ field ໃໝ໋ ປະເພດຂໍ້ມູນ;
		ຕົວຢ່າງ: ຈົ່ງປ່ຽນຊື່ຟິວ nname ໃນຕາຕະລາງ address ມາເປັນ nickname
		==> alter table address change nname nickname varchar(30) not null;
#ຮູບແບບການປ່ຽນແປງປະເພດຂໍ້ມູນ
		alter table ຊື່ຕາຕະລາງ modify ຊື່ field ປະເພດຂໍ້ມູນໃໝ່;
		==> alter table address modify nickname varchar(15) not null;
#ຮູບແບບການລົບຟິວໃນຕາຕະລາງ
		alter table ຊື່ໃນຕາຕະລາງ drop ຊື່ field;
		ຕົວຢ່າງ: ຈົ່ງລົບຟິວຊື່ວ່າ nname ໃນຕາຕະລາງ address ອອກໄປ
		alter table address drop nname;
# ຮູບແບບການປ່ຽນແປງຊື່ຕາຕະລາງ
		alter table ຊື່ຕາຕະລາງ rename ຊື່ຕາຕະລາງໃໝ່;
		ຕົວຢ່າງ: ຈົ່ງປ່ຽນຊື່ຕາຕະລາງ address ໄປເປັນ aaa
		alter table address rename aaa;
		*ໝາຍເຫດ: ຖ້າເຮົາໃຊ້ rename ສາມາດໃຊ້:
		rename table ຊື່ຕາຕະລາງ to ຊື່ຕາຕະລາງໃໝ່;
		rename table aaa to address;
3. ການລົບໂຄງສ້າງ ຖານຂໍ້ມູນ ແລະ ຕາຕະລາງ
		- ຮູບແບບ ລົບຖານຂໍ້ມູນ:
		drop database ຊື່ຖານຂໍ້ມູນ;
		- ຮູບແບບ ລົບຕາຕະລາງ
		drop table ຊື່ຕາຕະລາງ;
===============================
ບົດທີ4 ການນໍາໃຊ້ປະເພດຄໍາສັ່ງ DML
1. ການນໍາໃຊ້ຄໍາສັ່ງ insert 
		ເປັນຄໍາສັ່ງບັນທຶກຂໍ້ມູນ
# ຮູບແບບການບັນທຶກຂໍ້ມູນໃນຕາຕະລາງ
		insert into ຊື່ຕາຕະລາງ("ຊື່field1,ຊື່field2,ຊື່field3,ຊື່field4,ຊື່field5,........");
ຕົວຢ່າງ: 
- ຈົ່ງສ້າງ ຖານຂໍ້ມູນຊື່ວ່າ db_evening ໃຊ້ຊັບພອດພາສາລາວ
- ຈົ່ງສ້າງ ຕາຕະລາງ yourself ສ້າງໄວ້ໃນຖານຂໍ້ມູນ db_evening ເພື່ອເກັບກໍາຂໍ້ມູນບຸກຄົນເຊັ່ນ:
id			ລະຫັດ	ກໍານົດເປັນຕົວເລກເພີ່ມອັດຕະໂນມັດ ແລະ ເປັນ primary key( id tnt(2)auto_increment primary key,)
fname		ຊື່
lname		ນາມສະກຸນ
gender		ເພດ
dob			ວັນເດືອນປີເກີດ
vill			ບ້ານ
dis			ເມືອງ
pro			ແຂວງ
tel			ເບີໂທ
- ຈົ່ງບັນທຶກຂໍ້ມູນເຂົ້າໄປໃນຕາຕະລາງ yourself 3 ລາຍການ
==> insert into yourself(fname,lname,gender,dob,vill,dis,pro,tel)values('suphansa','pimmasone','female','2003-9-26','nakala','savannakhet','songkhon','02091902392');
ຮູບແບບທີ່2:
insert into yourself set fname='suphansa',lname='pimmasone',gender='female',dob='2003-9-26',vill='nakala',dis='songkhon',pro='savannakhet',tel='02091902392';
+ ວິທີເພິ່ມຂໍ້ມູນເຂົ້າຕາຕະລາງເທື່ອລະຫຼາຍຄົນ
insert into yourself(fname,lname,gender,dob,vill,dis,pro,tel)values
('suphansa','pimmasone','female','2003-9-26','nakala','songkhon','savannakhet','02091902302'),
('suphansa','pimmasone','female','2003-9-26','nakala','songkhon','savannakhet','02091902302'),
('suphansa','pimmasone','female','2003-9-26','nakala','songkhon','savannakhet','02091902302');
*ກວດສອບເບິ່ງຂໍ້ມູນໃນຕາຕະລາງ select*from ຊື່ຕາຕະລາງ;
select*from yourself;
2. ການນໍາໃຊ້ຄໍາສັ່ງ select
	+ ຮູບແບບການນໍາໃຊ້
- ຂໍ້ມູນທັງໝົດ:
select*from yourself;
- ຂໍ້ມູນຕາມທີ່ເລືອກ:
select ຟິວ1,ຟິວ2,ຟິວ3.... from ຊື່ຕາຕະລາງ;
ຕົວຢ່າງ: ຈົ່ງເອົາຂໍ້ມູນ ຊື່,ນາມສະກຸນ,ເພດ ໃນຕາຕະລາງ yourself ມາສະແດງ
select fname,lname,gender from yourself;
ວຽກບ້ານ:
1. ຈົ່ງບັນທຶກຂໍ້ມູນເຂົ້າໄປໃນຕາຕະລາງ yourself 2 ລາຍການ?
==> insert into yourself(fname,lname,gender,dob,vill,dis,pro,tel)values('suphansa','pimmasone','female','2003-9-26','nakala','songkhon','savanakhet','02091902392'),('suphansa','pimmasone','female','2003-9-26','nakala','songkhon','savanakhet','02091902392');
2. ຈົ່ງເອົາລະຫັດ,ຊື່,ນາມສະກຸນ,ເພດ,ວັນເດືອນປີເກິດ,ເບີໂທ ໃນຕາຕະລາງ yourself ມາສະແດງ
==> select id,fname,lname,gender,dob,tel from yourself;
# select ແບບມີເງື່ອນໄຂ:
ຮູບແບບ:
	select ຂໍ້ມູນໃຫ້ສະແດງ from ຊື່ຕາຕະລາງ where ຊື່ຟິວ='ຂໍ້ມູນເງື່ອນໄຂ';
ຕົວຢ່າງ: ເອົາທັງໝົດສະເພາະຜູ້ມີລະຫັດ=2 ມາສະແດງ
==> select*from yourself where id='2';
ບົດເຝິກຫັດ:
	1. ຈົ່ງເອົາຂໍ້ມູນຂອງຜູ້ທີ່ຊື່ວ່າ: alex ມາສະແດງ ເລືອກສະແດງສະເພາະ ຊື່, ວັນເດືອນປີເກີດ, ບ້ານ, ເມືອງ, ແຂວງ
	2. ຈົ່ງສະແດງຂໍ້ມູນທັງໝົດ ສະເພາະເພດຊາຍ
	3. ຈົ່ງສະແດງຊື່, ນາມສະກຸນ, ບ້ານ, ສໍາຫຼັບຜູ້ທີ່ຢູ່ບ້ານ Nonsavang
	4. ຈົ່ງສະແດງຂໍ້ມູນຂອງຜູ້ທີ່ຢູ່ແຂວງວຽງຈັນ ວ່າມີໃຜແດ່? ໃຫ້ສະແດງ ຊື່, ນາມສະກຸນ ແລະ ແຂວງ
3. ຄໍາສັ່ງ update
	ເປັນຄໍາສັ່ງໃຊ້ໃນການປ່ຽນແປງຂໍ້ມູນຄືນໃໝ່
+ ຮູບແບບ:
update ຊື່ຕາຕະລາງ set ຊື່ຟິວ='ຂໍ້ມູນປ່ຽນໃໝ່' where ຊື່ຟິວ = ຂໍໍ້ມູນທີ່ເປັນເງື່ອນໄຂ;
ຕົວຢ່າງ: ຈົ່ງປ່ຽນຂໍ້ມູນຂອງ noy ປ່ຽນ ນາມສະກຸນມາເປັນ SORSAMONE ເພດເປັນຍິງ ເບີໂທເປັນ 02055555555
update yourself set lname='SORSAMONE',gender='female',tel='02055555555' where fname='noy'; (ໃຊ້ id ເປັນເງື່ອນໄຂຈະດີກວ່າ)
ວຽກບ້ານ:
1. ຈົ່ງແກ້ໄຂທີ່ຢູ່ຂອງ noy ປ່ຽນບ້ານມາເປັນ luk52 ເມືອງເປັນ Phonhong ແຂວງViengchan
==> update yourself set vill='luk52',dis='Phonhong',pro='Viengchan' where fname='noy';
2. ตຈົ່ງປ່ຽນວັນເດຶອນປີເກີດຂອງຜູ້ທີ່ມີລະຫັດເທົ່າກັບ 9 ເປັນວັນທີ 27 ເດືອນ 4 ປີ 2003
update yourself set dob='2003-4-27' where id='9';
4. ຄໍາສັ່ງ delete 
	ເປັນຄໍາສັ່ງລົບຂໍ້ມູນໃນຕາຕະລາງ
delete from ຊື່ຕາຕະລາງ where ຊື່ຟິວ='ເງື່ອນໄຂ';
ຕົວຢ່າງ: ຈົ່ງລົບຂໍ້ມູນຂອງຜູ້ທີ່ມີລະຫັດເທົ່າກັບ 3 ໃນຕາຕະລາງ yourself
ລົບຂໍ້ມູນບາງຟິວ:
update ຊື່ຕາຕະລາງ set ຊື່ຟິວ='' where ຊື່ຟິວ='ເງື່ອນໄຂ'
==========
ບົດທີ 5 
ການນໍາໃຊ້ຄໍາສັ່ງຮ່ວມກັບເງື່ອນໄຂ
1. ການນໍາໃຊ້ and (ຕ້ອງມີທັງສອງເງື່ອນໄຂຈຶ່ງທໍາງານ)
		ຕົວຢ່າງ: ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດ ຂອງຄົນຢູ່ບ້ານ phonmee ທີ່ເປັນເພດຍິງ.
==> select* from yourself where vill='phonmee' and gender='female';
2. ການນໍາໃຊ້ or  ມີພຽງໜຶ່ງເງື່ອນໄຂກໍທໍາງານ
		ຕົວຢ່າງ: ຈົ່ງຊອກຫາຂໍ້ມູນຂອງຄົນທີ່ຢູ່ບ້ານ phonmee ຫຼື ຢູ່ບ້ານ nonsavang ໃຫ້ເອົາຊື່, ນາມສະກຸນ, ບ້ານ, ເມືອງ, ແຂວງ ມາສະແດງ.
==> select fname,lname,vill,dis,pro from yourself where vill='phonemee' or vill='nonsavang';
3. ເຄື່ອງໝາຍ
	>=	ໃຫຍ່ກວ່າ ຫຼື ເທົ່າກັບ
	<=	ນ້ອຍກວ່າ ຫຼື ເທົ່າກັບ
	>	ໃຫຍ່ກວ່າ
	<	ນ້ອຍກວ່າ
	<>	ບໍ່ເທົ່າກັບ
	!=	ບໍ່ເທົ່າກັບ
ຕົວຢ່າງ: ຈົ່ງສະແດງຂໍ້ມູນທັງໝົດຍົກເວັ້ນ ຄົນທີ່ຊື່ noy
==> select* from yourself where fname<>noy;
ບົດເຝິກຫັດ:
1. ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງພະນັກງານທີ່ມີລະຫັດ ເທົ່າກັບ 1,3,5?
select* from staff where id='1' or id='3' or id='5';
select* from staff where id in(1,3,5);
2. ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງພະນັກງານທີ່ມີຊື່ຂຶ້ນຕົ້ນດ້ວຍຕົວk
select* from staff where fname like'k%'; ==> ຂຶ້ນຕົ້ນດ້ວຍຕົວ k
select* from staff where fname like'%k'; ==> ລົງທ້າຍດ້ວຍຕົວ k
select* from staff where fname like'%k%'; ==> ທຸກຊື່ທີ່ມີຕົວ k
3. ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງພະນັກງານແຕ່ຍົກເວັ້ນຊື່ຂຶ້ນຕົ້ນດ້ວຍຕົວ k
select* from staff where fname not like'k%';
4. ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງພະນັກງານທີ່ມີຊື່ຂຶ້້ນຕົ້ນດ້ວຍຕົວ k ແລະ ສະເພາະເພດຊາຍ
select* from staff where fname like'k%' and gender='male';
ສະຫຼຸບ:
1. ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງພະນັກງານທີ່ມີຊື່ດັ່ງນີ້:keo,kino,lek
select* from staff where fname='keo' or fname='kino' or fname='lek';
 select* from staff where fname in ('keo','kino','lek');
2. ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງພະນັກງານທີ່ມີຊື່ຂຶ້ນຕົ້ນດ້ວຍຕົວ B
select* from staff where fname like'b%';
3. ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງພະນັກງານແຕ່ຍົກເວັ້ນຊື່ຂຶ້ນຕົ້ນດ້ວຍຕົວ D 
select* from staff where fname not like'd%';
4. ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງພະນັກງານທີ່ມີຊື່ຂຶ້ນຕົ້ນດ້ວຍຕົວ T ແລະ ສະເພາະເພດຍິງ
 select* from staff where fname like't%' and gender='female';
ວຽກບ້ານ:
5. ຈົ່ງເອົາຊື່,ນາມສະກຸນຂອງພະນັກງານມາສະແດງໃນຫ້ອງດຽວກັນ?
select concat(fname,' ',lname) from staff;
select concat(fname,' ',lname)as fname_lname from staff;
6. ຈົ່ງກວດສອບເບິ່ງພະແນກວ່າມີພະແນກຫຍັງແດ່?
select distinct (department) from staff;
7. ຈົ່ງເອົາຂໍ້ມູນທັງໝົດຂອງພະນັກງານມາສະແດງ ແຕ່ລະຫັດ ໃຫຍ່ ຫາ ນ້ອຍ.
select* from staff order by id desc;
select* from staff order by id asc;
8. ຈົ່ງເອົາຂໍ້ມູນທັງໝົດຂອງພະນັກງານທີ່ອາຍຸ 1994-01-01 ຫາ 1996-12-31 ມາສະແດງ.
select* from staff where dob between'1994-1-1' and '1996-12-31';
9. ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງຄົນທີ່ມີເງິນເດືອນຫຼາຍທີ່ສຸດ.
select fname,lname,salary from staff order by salary desc;
select fname,lname,salary from staff order by salary desc limit 1;
select max(salary) from staff;
select* from staff where salary=(select max(salary)from staff);
10. ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງຄົນທີ່ມີເງິນເດືອນນ້ອຍສຸດ.
select fname,lname,salary from staff order by salary asc;
select fname,lname,salary from staff order by salary asc limit 1;
select min(salary) from staff;
select* from staff where salary=(select min(salary)from staff);
11. ຈົ່ງກວດສອບພະນັກງານທັງໝົດມີຈັກຄົນ.
select count(id) from staff;
12. ຈົ່ງກວດສອບພະນັກງານຊາຍທັງໝົດມີຈັກຄົນ.
select count(id) from staff where gender='male';
13. ການເອົາວັນທີເດືອນປີ ແລະ ເວລາ ປັດຈຸບັນມາສະແດງ 
select now() as time;
select now()		ການເອົາວັນທີເດືອນປີ ແລະ ເວລາ ປັດຈຸບັນ ມາສະແດງ
select curdate();	ການເອົາວັນທີເດືອນປີ ປັດຈຸບັນ ມາສະແດງ
select curtime();	ການເອົາເວລາ ປັດຈຸບັນ ມາສະແດງ
ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງຄົນທີ່ເກີດເດືອນ10.
 select* from staff where month(dob)=10;
select* from staff where dob like'%10%';
select* from staff where dob like'_____10%';
select* from staff where dob like'_____10___';(ທາງໜ້າມີ5 ທາງຫຼັງມີ3)
ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງຄົນທີ່ເກີດວັນທີ15
select* from staff where day(dob)=15;
select* from staff where dob like'%15';
select* from staff where dob like'________15';(ທາງໜ້າມີ8)
14. ຈົ່ງຊອກຫາອາຍຸຂອງພະນັກງານ.
select year(curdate())-year(dob) from staff;
- ຈົ່ງເອົາ ຊື່ ນາມສະກຸນ ອາຍຸ ມາສະແດງ?
==> select fname,lname,year(curdate())-year(dob) from staff;
15. ຈົ່ງຊອກຫາຄົນ ອາຍຸ 20ປີ ເອົາຊື່, ນາມສະກຸນ, ອາຍຸ ມາສະແດງ.
select fname,lname,year(curdate())-year(dob) from staff where year(curdate())-year(dob)=20;
select fname,lname,year(curdate())-year(dob)as age from staff where year(curdate())-year(dob)=20; 
16. ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງຜູ້ທີ່ມີອາຍຸຫຼາຍກວ່າ 18 ປີ ມາສະແດງ
select* from staff where year(curdate())-year(dob)>18;
select *,year(curdate())-year(dob)as age from staff where year(curdate())-year(dob)>18;
- ຈົ່ງຊອກຫາຂໍ້ມູນທັງໝົດຂອງຄົນທີ່ເກີດປີ2000
select* from staff where year(dob)=2000;
17. ຈົ່ງຊອກຫາອາຍຸຂອງພະນັກງານ ໂດຍໃຫ້ສະແດງຊື່, ນາມສະກຸນ, ອາຍຸ?
select fname,lname,year(curdate())-year(dob)as age from staff;
18. ລວມເງິນເດືອນທັງໝົດ?
select sum(salary) from staff;
19. ຈົ່ງເອົາຂໍ້ມູນທັງໝົດມາສະແດງ ແຕ່ສະແດງພຽງ 2ລາຍການ.
select* from staff limit 2;
20. ຈົ່ງລ້າງຂໍ້ມູນທັງໝົດໃນຕາຕະລາງ staff?
truncate table staff;
21. ຈົ່ງກວດສອບເບິ່ງວ່າ ແຕ່ລະພະແນກມີຈັກຄົນ ໂດຍໃຫ້ສະແດງຊື່ພະແນກ ແລະ ຈໍານວນຄົນ?
select department,count(id) from staff group by department;

- ຊອກຫາາເກີດ ວັນທີເດືອນປີດ້ວຍ function date():
=> select* from staff where day(dob)=01; (ຊອກຫາວັນທີ)
=> select* from staff where month(dob)=3; (ຊອກເດືອນ)
=> select* from staff where year(dob)=2000; (ຊອກປີ)
ສະຫຼຸບ:
1. ຈົ່ງເອົາຊື່, ພະແນກຂອງພະນັກງານມາສະແດງໃນຫ້ອງດຽວກັນ ໂດຍໃຫ້ສະແດງດັ່ງນີ້:
ຊື່ department is ຊື່ພະແນກ
select concat (fname, ' department is ',department)as department from staff;
2. ຈົ່ງກວດສອບເບິ່ງວ່າມີພະແນກຫຍັງແດ່?
select distinct(department) from staff;
3. ຈົ່ງເອົາຂໍ້ມູນທັງໝົດຂອງພະນັກງານມາສະແດງ ແຕ່ໃຫ້ສະແດງແຕ່ຜູ້ຊື່ຂຶ້ນຕົ້ນດ້ວຍຕົວອັກສອນ A-Z
select* from staff order by fname asc;
===========
ບົດທີ6
ການເຊື່ອມໂຍງຕາຕະລາງ(ລະບົບບໍລິຫານສາງສິນຄ້າ)
1. ຄໍາສັ່ງການເຊື່ອມໂຍງ
		ຄໍາສັ່ງການເຊື່ອມໂຍງ ແມ່ນໃຊ້ ຄໍາສັ່ງ foreign key. 
foreign key ແມ່ນການກໍານົດ column ເກັບເອົາຂໍ້ມູນຈາກ primary key ຂອງຕາຕະລາງທີ່ເຊື່ອມໂຍງ.
ຕົວຢ່າງ:
ຕາຕະລາງພະແນກ
	ລະຫັດພະແນກ		ຊື່ພະແນກ
	1				ພະແນກການເງິນ
	2				ພະແນກຝ່າຍບຸກຄົນ
	|____
ຕາຕະລາງຂອງພະນັກງານ:	|
ລະຫັດພະນັກງານ			ລະຫັດພະນັກງານ			ຊື່ພະນັກງານ			ນາມສະກຸນ
1					1					ທ້າວ ນ້ອຍ			ມາລາຫອມ
2					1					ນາງ ວັນຄໍາ			ພີລາໄລ
3					2					ນາງ ສຳລານ			ວໍລະຈິດ
2. ການເຊື່ອມໂຍງຕາຕະລາງ ຂອງລະບົບບໍລິຫານສາງສິນຄ້າາ:
	ການບໍລິຫານສາງສິນຄ້າ ເຮົາສາມາດແບ່ງຂໍ້ມູນອອກໄດ້ຢູ່ 5 ຕາຕະລາງຄື:
		1 	ຕາຕະລາງ  ປະເພດສິນຄ້າ. (categories)
		2	ຕາຕະລາງ  ຂໍ້ມູນສິນຄ້າ. (products)
		3	ຕາຕະລາງ  ນໍາເຂົ້າສິນຄ້າ. (receives)
		4	ຕາຕະລາງ  ຂາຍສິນຄັາ. (orders)
		7	ຕາຕະລາງ  ພະນັກງານ ຫຼື ຜູ້ນໍາໃຊ້. (user)
ເຊິ່ງຕາຕະລາງ ທັງໝົດນີ້ ແມ່ນຈະເກັບໄວ້ໃນຖານຂໍ້ມູນຊື່ວ່າ db_stock2022
ຕົວຢ່າງ: ໃຫ້ພວກນ້ອງສ້າງຖານຂໍ້ມູນຊື່ວ່າ: db_stock2022 ໃຫ້ຮັບຮອງພາສາລາວ.
2.1. ຕາຕະລາງ ປະເພດສິນຄ້າ. (categories)
ແມ່ນຕາຕະລາງ ເກັບກໍາຂໍ້ມູນປະເພດສິນຄ້າທັງໝົດພາຍໃນຮ້ານເພື່ອຮູ້ວ່າມີປະເພດໃດແດ່?
ເຊິ່ງປະກອບມີດັ່ງນີ້:
	cate_id		ລະຫັດປະເພດສິນຄ້າ PK
	cate_name	ຊື່ປະເພດສິນຄ້າ
	remark		ໝາຍເຫດ
2.2. ຕາຕະລາງ ຂໍ້ມູນສິນຄ້າ (products)
	ສ້າງຂຶ້ນເພື່ອເກັບກໍາຂໍ້ມູນຂອງສິນຄ້າແຕ່ລະລາຍການ
ເຊິ່ງຕາຕະລາງນີ້ມີຄວາມເຊື່ອມໂຍງກັນກັບຕາຕະລາງ ປະເພດສິນຄ້າເພື່ອໃຫ້ຮູ້ວ່າສິນຄ້າແຕ່ລະລາຍການແມ່ນຈັດຢູ່ປະເພດໃດ.
	prod_id		ລະຫັດສິນຄ້າ PK
	cate_id		ລະຫັດປະເພດສິນຄ້າ FK (foreign key(cate_id)references categories(cate_id),
	prod_name	ຊື່ສິນຄ້າ
	qty			ຈໍານວນ
	unit			ຫົວໜ່ວຍ
	bprice		ລາຄາຊື້
	sprice		ລາຄາຂາຍ
	remark		ໝາຍເຫດ
ບົດເຝິກຫັດ:
1. ຈົ່ງຊອກຫາສິນຄ້າທັງໝົດ ໃຫ້ສະແດງ ລະຫັດ, ຊື່, ລາຄາຊື້, ລາຄາຂາຍ?
select prod_id,prod_name,bprice,sprice from products;
2. ຈົ່ງຊອກຫາສິນຄ້າທັງໝົດ ໃຫ້ສະແດງ ສິນຄ້າທີ່ມີລະຫັດເທົ່າກັບ3?
Select* from products where prod_id=3;
3. ຈົ່ງຊອກຫາຂໍ້ມູນສິນຄ້າໃນຮ້ານໃຫ້ເອົາ ປະເພດສິນຄ້າ, ຊື່ສິນຄ້າ, ຈໍານວນສິນຄ້າ, ລາຄາຊື້, ລາຄາຂາຍ ມາສະແດງ?
- ວາງ a ໃຫ້ຕາຕະລາງ categories ຖ້າຕ້ອງການເອົາຟິວມາສະແດງ a.ຕາມດ້ວຍຊື່ຟິວ a.cate_name
- ວາງ b ໃຫ້ຕາຕະລາງ products ຖ້າຕ້ອງການເອົາຟິວມາສະແດງ b.ຕາມດ້ວຍຊື່ຟິວ b.prod_name
 select a.cate_name,b.prod_name,b.qty,b.bprice,b.sprice from categories as a,product as b where a.cate_id=b.cate_id;
4. ຈົ່ງຊອກຫາສິນຄ້າໃນຮ້ານ ປະເພດເຄື່ອງດື່ມ ມີຫຍັງແດ່?
select* from products as a,categories as b where a.cate_id=b.cate_id and b.cate_id=2;
5. ຈົ່ງກວດສອບເບິ່ງຈໍານວນສິນຄ້າ ທີ່ບໍ່ໄດ້ຢູ່ໃນປະເພດອາຫານ ມີເທົ່າໃດ?
select count(prod_id)from products as a,categories as b where a.cate_id=b.cate_id and b.cate_name<>'food';
6. ຈົ່ງຊອກຫາສິນຄ້າທີ່ມີຈໍານວນ ຫຼາຍກວ່າ 20 ໃຫ້ເອົາປະເພດສິນຄ້າ, ຊື່ສິນຄ້າ, ຈໍານວນ ມາສະແດງ?
select a.cate_name,b.prod_name,b.qty from categories as a,products as b where a.cate_id=b.cate_id and qty>20;
7. ຈົ່ງຊອກຫາຕົ້ນທຶນທັງໝົດຂອງສິນຄ້າທີ່ຢູ່ໃນຮ້ານ ເອົາຊື່ສິນຄ້າ, ຈໍານວນ, ລາຄາຊື້, ຕົ້ນທຶນ ມາສະແດງ?
select prod_name,qty,bprice,(qty*bprice)as cost from products;
8. ຈົ່ງຊອກຫາຕົ້ນທຶນທັງໝົດຂອງສິນຄ້າປະເພດ ເຄື່ອງດື່ມ ໃຫ້ເອົາ ປະເພດສິນຄ້າ, ຕົ້ນທຶນ ມາສະແດງຜົນ?
select a.cate_name,(b.qty*b.bprice)from products as b,categories as a where a.cate_id=b.cate_id and a.cate_name='drink';
select b.prod_name,a.cate_name,(b.qty*b.bprice)from products as b,categories as a where a.cate_id=b.cate_id and a.cate_name='drink';
9. ຈົ່ງຊອກຫາຕົ້ນທຶນ ຍອດຂາຍ ແລະ ກໍາໄລ ຂອງແຕ່ລະສິນຄ້າຢູ່ໃນຮ້ານ ເອົາຊື່ສິນຄ້າ, ຕົ້ນທຶນ, ຍອດຂາຍ ແລະ ກໍາໄລ ມາສະແດງ?
select  prod_name,(qty*bprice)as cost,(qty*sprice)as sales,(qty*sprice-qty*bprice)as profit from products;
10. ຈົ່ງຊອກຫາຕົ້ນທຶນທັງໝົດ, ຍອດຂາຍທັງໝົດ ແລະ ກໍາໄລທັງໝົດ ຂອງສິນຄ້າ ປະເພດ ອາຫານ ໃຫ້ເອົາປະເພດສິນຄ້າ, ຕົ້ນທຶນທັງໝົດ ຍອດຂາຍທັງໝົດ ແລະ ກໍາໄລທັງໝົດ ມາສະແດງ.
 select a.cate_name,sum(b.qty*b.bprice)as cost,sum(b.qty*b.sprice)as sales,sum(b.qty*b.sprice-b.bprice)as profit from categories as a,products as b where a.cate_id=b.cate_id and a.cate_name='food';
11. ຈົ່ງນັບຈໍານວນສິນຄ້າທັງໝົດວ່າມີຈັກລາຍການ?
select count(prod_id) from products;
12. ຈົ່ງເອົາຂໍ້ມູນຂອງສິນຄ້າ ທີ່ມີລາຄາຂາຍທີ່ແພງທີ່ສຸດ ມາສະແດງ ໂດຍໃຫ້ສະແດງ ປະເພດສິນຄ້າ, ຈໍານວນ ແລະ ຫົວໜ່ວຍຢູ່ຫ້ອງດຽວກັນ, ລາຄາຂາຍ?
select b.prod_name,a.cate_name,concat(b.qty,' ',b.unit) from categories as a,products as b where a.cate_id=b.cate_id and b.sprice=(select max(sprice)from products);
13. ຈົ່ງແກ້ໄຂລາຄາຂາຍຂອງສິນຄ້າ pepsi ມາເປັນ 20,000
update products set sprice='20000' where prod_name='pepsi';
14. ຈົ່ງລົບສິນຄ້າ milk ອອກຈາກຕາຕະລາງ
delete from products where prod_name='milk';
----------------------------------------
2.3. ຕາຕະລາງນໍາເຂົ້າສິນຄ້າ (receives)
		ສ້າງຂຶ້ນເພື່ອເກັບກໍາຂໍ້ມູນຂອງສິນຄ້ານໍາເຂົ້າມາເພິ່ມ. ຕາຕະລາງນີ້ຈະມີການເຊື່ອມໂຍງກັບ ຕາຕະລາງ products ເພື່ອໃຫ້ຮູ້ສິນຄ້ານໍາເຂົ້າມາແຕ່ລະຄັ້ງ ວ່າແມ່ນສິນຄ້າໂຕໃດ ເຊິ່ງຕາຕະລາງນີ້ປະກອບມີ
  r_id		ລະຫັດນໍາເຂົ້າ pk
  prod_id		ລະຫັດສິນຄ້າ fk
  r_qty		ຈໍານວນສິນຄ້າຮັບເຂົ້າ
  r_bprice		ລາຄາຮັບສິນຄ້າເຂົ້າ
  r_amount	ເງິນລວມ
  r_date		ວັນທີ່ຮັບສິນຄ້າເຂົ້າ
  r_time		ເວລາຮັບສິນຄ້າເຂົ້າ
  remark		ໝາຍເຫດ
ບົດເຝີກຫັດ
1. ຊອກຫາຂໍ້ມູນສິນຄ້າທີ່ຊື້ມາມື້ນີ້ວ່າມີຫຍັງແດ່? ໃຫ້ສະແດງຊື່ສິນຄ້າ, ຈໍານວນນໍາເຂົ້າ ແລະ ຫົວໜ່ວຍຢູ່ຫ້ອງດຽວກັນ, ຈໍານວນຢູ່ໃນສາງ ແລະຫົວໜ່ວຍຫ້ອງດຽວກັນ, ລາຄາຮັບເຂົ້າ, ເງິນລວມ?
select a.prod_name,concat(b.r_qty,' ',a.unit)as qty_new,concat(a.qty,' ',a.unit) as qty_old,b.r_bprice,b.r_amount from products as a,receives as b where a.prod_id=b.prod_id and r_date=curdate();
2. ຊອກຫາຂໍ້ມູນສິນຄ້າທີ່ຊື້ເຂົ້າມາ ລະຫວ່າງວັນທີ 24-07-2023 ຫາ 31-07-2023 ໃຫ້ເອົາ ຊື່ສິນຄ້າ, ຈໍານວນຮັບເຂົ້າ, ລາຄາຮັບເຂົ້າ, ເງິນລວມ ວັນທີຮັບເຂົ້າ ມາສະແດງ?
select a.prod_name,b.r_qty,b.r_bprice,b.r_amount,b.r_date from products as a,receives as b where a.prod_id=b.prod_id and r_date between '2023-07-24' and '2023-07-31';
3. ຊອກຫາຂໍ້ມູນສິນຄ້າທີ່ຊື້ເຂົ້າມາ ວ່າສິນຄ້າໃດລາຄາຊື້ຖືກສຸດ ໃຫ້ເອົາ ຊື່ສິນຄ້າ, ລາຄາຊື້ ມາສະແດງ?
select a.prod_name,b.r_bprice from products as a,receives as b where a.prod_id=b.prod_id and b.r_bprice=(select min(r_bprice)from receives);
4. ຈົ່ງສະຫຼຸບເງິນທັງໝົດທີ່ຊື້ສິນຄ້າເຂົ້າມາໃນມື້ນີ້?
select sum(r_amount)from receives where r_date=curdate();
5. ຊອກຫາຂໍ້ມູນສິນຄ້າທີ່ຊື້ເຂົ້າມາຫຼາຍທີ່ສຸດໃນມື້ນີ້ ໃຫ້ເອົາ ປະເພດສິນຄ້າ, ຊື່ສິນຄ້າ, ຈໍານວນຮັບເຂົ້າມາ ມາສະແດງ?
select a.cate_name,b.prod_name,c.r_qty from categories as a,products as b,receives as c where a.cate_id=b.cate_id and b.prod_id=c.prod_id and c.r_qty=(select max(r_qty)from receives where r_date=curdate());
ຕົວຢ່າງ: ຈົ່ງສະແດງຂໍ້ມູນທັງໝົດໂດຍໃຫ້ສະແດງ ປະເພດສິນຄ້າ, ຊື່ສິນຄ້າ ວັນທີ່ຮັບເຂົ້າ
select a.cate_name,b.prod_name,c.r_date from categories as a ,products as b,receives as c where a.cate_id=b.cate_id and b.prod_id=c.prod_id;
- ວາງຕາຕະລາງ categories ເປັນ a ຖ້າຢາກໄດ້ຂໍ້ມູນຈາກຟິວຂອງຕາຕະລາງ categories ເຮົາຈະຂຽນ a.ຕາມດ້ວຍຊື່ຟິວ
- ວາງຕາຕະລາງ products ເປັນ b ຖ້າຢາກໄດ້ຂໍ້ມູນຈາກຟິວຂອງຕາຕະລາງ products ເຮົາຈະຂຽນ b.ຕາມດ້ວຍຊື່ຟິວ
- ວາງຕາຕະລາງ receives ເປັນ c ຖ້າຢາກໄດ້ຂໍ້ມູນຈາກຟິວຂອງຕາຕະລາງ receives ເຮົາຈະຂຽນ c.ຕາມດ້ວຍຊື່ຟິວ
select a.cate_name,b.prod_name from categories as a,products as b where a.cate_id=b.cate_id;
select a.cate_name,b.prod_name,c.r_date from categories as a,products as b,receives as c where a.cate_id=b.cate_id and b.prod_id=c.prod_id;
ບົດເຝິກຫັດ:
1. ຊອກຫາຂໍ້ມູນສິນຄ້າທີ່ຊື້ມາມື້ນີ້ວ່າມີຫຍັງແດ່? ໃຫ້ສະແດງຊື່ສິນຄ້າ,ປະເພດສິນຄ້າ ຈໍານວນນໍາເຂົ້າ ແລະ ຫົວໜ່ວຍຢູ່ຫ້ອງດຽວກັນ, ຈໍານວນຢູ່ໃນສາງ ແລະຫົວໜ່ວຍຫ້ອງດຽວກັນ, ລາຄາຮັບເຂົ້າ, ເງິນລວມ?
select b.prod_name,a.cate_name,concat(c.r_qty,' ',b.unit)as qty_new,concat(b.qty,' ',b.unit)as qty_old,c.r_bprice,c.r_amount from categories as a,products as b,receives as c where a.cate_id=b.cate_id and b.prod_id=c.prod_id and c.r_date=curdate();
2. ຊອກຫາຂໍ້ມູນສິນຄ້າທີ່ຊື້ເຂົ້າມາ ລະຫວ່າງວັນທີ 24-07-2023 ຫາ 31-07-2023 ໃຫ້ເອົາ ຊື່ສິນຄ້າ,ປະເພດສິນຄ້າ, ຈໍານວນຮັບເຂົ້າ, ລາຄາຮັບເຂົ້າ, ເງິນລວມ ວັນທີຮັບເຂົ້າ ມາສະແດງ?
select b.prod_name,a.cate_name,c.r_qty,c.r_bprice,c.r_amount,c.r_date from categories as a,products as b,receives as c where a.cate_id=b.cate_id and b.prod_id=c.prod_id and c.r_date between '2023-7-24' and '2023-7-31';
3. ຊອກຫາຂໍ້ມູນສິນຄ້າທີ່ຊື້ເຂົ້າມາ ວ່າສິນຄ້າໃດລາຄາຊື້ຖືກສຸດ ໃຫ້ເອົາ ຊື່ສິນຄ້າ,ປະເພດສິນຄ້າ, ລາຄາຊື້ ມາສະແດງ?
select b.prod_name,a.cate_name,c.r_bprice from categories as a,products as b,receives as c where a.cate_id=b.cate_id and b.prod_id=c.prod_id and c.r_bprice=(select min(r_bprice)from receives); 
2.4 ຕາຕະລາງ ຂາຍສິນຄ້າ (orders)
	ສ້າງຕາຕະລາງ ຂາຍສິນຄ້າ(orders) ຂຶ້ນມາເພື່ອເກັບຂໍ້ມູນການຂາຍສິນຄ້າອອກແຕ່ລະຄັ້ງ. ຕາຕະລາງນີ້ແມ່ນມີເຊື່ອມໂຍງກັບ ຕາຕະລາງ products ເພື່ອຮູ້ວ່າສິນຄ້າທີ່ຂາຍນັ້ນແມ່ນສິນຄ້າຕົວໃດ%
	o_id			ລະຫັດຂາຍສິນຄ້າ pk
	prod_id		ລະຫັດຂາຍສິນຄ້າ fk(ເປັນ key ສໍາຮອງເຊື່ອມໂຍງກັບຕາຕະລາງ products)
	o_qty		ຈໍານວນຂາຍສິນຄ້າ
	0_sprice		ລາຄາຂາຍສິນຄ້າ
	o_amount		ເງິນລວມ
	o_date		ວັນທີ່ຂາຍສິນຄ້າ
	o_time		ເວລາທີ່ຂາຍສິນຄ້າ
	remark		ໝາຍເຫດ
(ຖ້າຕ້ອງການຄິດໄລ່ກໍາໄລ select sum(qty*(sprice-bprice)) from products;)
ບົດເຝິກຫັດ
1. ຈົ່ງຊອກຫາສິນຄ້າຂອງປະເພດເຄື່ອງດື່ມ ທີ່ຂາຍອອກໄປໃນມື້ນີ້ ເອົາ ປະເພດສິນຄ້າ, ຊື່ສິນຄ້າ, ຈໍານວນຂາຍ, ລາຄາຂາຍ, ເງິນລວມ, ວັນທີຂາຍມາສະແດງ?
select a.cate_name,b.prod_name,c.o_qty,c.o_sprice,c.o_amount,c.o_date from categories as a,products as b,orders as c where a.cate_id=b.cate_id and b.prod_id=c.prod_id and c.o_date=curdate() and a.cate_name='drink';
2. ຈົ່ງກວດສອບເບິ່ງວ່າມື້ນີ້ຂາຍສິນຄ້າ pepsi ບໍ ເອົາ ຊື່ສິນຄ້າ, ຈໍານວນຂາຍ, ວັນທີຂາຍມາສະແດງ?
select a.prod_name,b.o_qty,b.o_date from products as a,orders as b where a.prod_id=b.prod_id and  a.prod_name='pepsi' and b.o_date=curdate();
3. ຈົ່ງສະຫຼຸບຍອດຂາຍທັງໝົດຂອງມື້ນີ້ວ່າໄດ້ເງິນເທົ່າໃດ?
select sum(o_amount)from orders where o_date=curdate();
4. ຈົ່ງຊອກຫາສິນຄ້າ ທີ່ໄດ້ຂາຍດີກວ່າໝູ່ໃນຮ້ານ ເອົາ ຊື່ສິນຄ້າ, ຈໍານວນຂາຍ ມາສະແດງ?
select a.prod_name,sum(b.o_qty)from products as a,orders as b where a.prod_id=b.prod_id group by a.prod_name order by sum(b.o_qty)desc limit 1;
select a.prod_name,sum(b.o_qty)from products as a,orders as b where a.prod_id=b.prod_id group by b.o_qty order by sum(b.o_qty)desc limit 1;
5. ຈົ່ງລາຍງານ ລາຍການການຂາຍສິນຄ້າ ຕັ້ງແຕ່ສິນຄ້າໄດ້ຂາຍຫຼາຍທີ່ສຸດ ຫາ ສິນຄ້າໄດ້ຂາຍນ້ອຍສຸດ?
select a.prod_name,sum(b.o_qty)from products as a,orders as b where a.prod_id=b.prod_id group by a.prod_name order by sum(b.o_qty)desc;
3. ການ select 2 ຕາຕະລາງຂຶ້ນໄປດ້ວຍ Inner join,Right join,Left join.
	3.1. Inner join 
		ຕົວຢ່າງ: ຈົ່ງລາຍງານສິນຄ້າທັງໝົດ ໂດຍຈັດລຽນຕາຕະລາງ ແຕ່ ລາຄາແພງ-ຖືກ ເອົາ ຊື່ປະເພດ, ຊື່ສິນຄ້າ, ລາຄາຂາຍ ມາສະແດງ.
- select cate_name,prod_name,sprice from categories inner join products where categories.cate_id=products.cate_id order by sprice desc;
ບົດເຝິກຫັດ:
ຈົ່ງສະຫຼຸບຍອດຂາຍຂອງແຕ່ລະລາຍການວ່າໄດ້ເງິນເທົ່າໃດ ໃຫ້ສະແດງຊື່ສິນຄ້າ, ຈໍານວນຂາຍທັງໝົດຂອງແຕ່ລະລາຍການ, ເງິນລວມ ຂອງແຕ່ລະລາຍການ?
select prod_name,sum(o_qty),sum(o_amount) from products inner join orders where products.prod_id=orders.prod_id group by prod_name order by sum(o_amount);
select prod_name,sum(o_qty),sum(o_amount) from products inner join orders where products.prod_id=orders.prod_id group by o_qty;
3.3. Left join
	Left join ແມ່ນຈະອ້າງອີງຂໍ້ມູນທາງຂວາເປັນຫຼັກ (ຕາຕະລາງ ຢູ່ທາງຊ້າຍຈະສະແດງຂໍ້ມູນອອກມາທັງໝົດ)
	ຕົວຢ່າງ: - ຈົ່ງກວດສອບການນໍາເຂົ້າສິນຄ້າທັງໝົດ ໃຫ້ເອົາ ລະຫັດສິນຄ້າ, ຊື່ສິນຄ້າ, ຈໍານວນຮັບເຂົ້າ, ວັນທີຮັບເຂົ້າ ມາສະແດງ
select products.prod_id,prod_name,r_qty,r_date from products left join recives on products.prod_id=receives.prod_id;
-------------------------------------------------
ບົົດທີ7
View table
1. ຄວາມໝາຍ:
	view ແມ່ນໂຄງສ້າງຂອງຕາຕະລາງທີ່ເຮົາຈໍາລອງຂຶ້້ນມາຈາກການ select ຂໍ້ມູນ.
2. ການສ້າງ view 
	create view  ໃສ່ຊື່ວິວ (ໃສ່ຕາມໃຈ) as ຕາມດ້ວຍຄໍາສັ່ງ select ຂໍ້ມູນ.
ຕົວຢ່າງ: ຈົ່ງສ້າງ view ຊຶ່ວ່າ view_products ເພື່ອເກັບກໍາຂໍ້ມູນສິນຄ້າໃຫ້ເອົາຊື່ປະເພດສິນຄ້າ, ຊື່ສິນຄ້າ, ຈໍານວນສິນຄ້າ, ລາຄາຂາຍ ມາສະແດງ.
==> create view view_products as select a.cate_name,b.* from categories as a,products as b where a.cate_id=b.cate_id;
==> select cate_name,prod_name from view_products;
3. ຮູູບແບບ ການລົບ view
	drop view ຕາມດ້ວຍຊື່ວິວ;
- ປິດການເຊື່ອມໂຍງ ຕາຕະລາງຊົ່ວຄາວ foreign key 
+ ຄໍາສັ່ງຍົກເລິກ foreign key:		set foreign_key_checks=0;
+ ເອົາກັບຄືນມາ foreign key:		set foreign_key_checks=1;

ທົບທວນບົດຮຽນ:
SQL =Structure Query Language
-------------------------------------------------
 ລະບົບບໍລິຫານ ຖານຂໍ້ມູນ ແບບພົວພັນ
RDBMS= Relational Database Management System
DML = Data Minifulation Languge
insert
select
update
delete
DDL = Data Difinition Language
create
alter 
drop
truncate
DCL = Data Control Language
grant
revoke
----backup
----restore
--------------------
MySQ	----> Oracle ອໍຣັກໂຄ ມີລິຂະສິດ
PosGreSQL ----> Informix ອິນພໍມິກ
MS-SQL
Sybase
Firebase
.....
ລະບົບຂໍ້ມູນຂ່າວສານ ໃນທຸລະກິດ = Enterprise Information System


ວົງຈອນການພັດທະນາຊອບແວ
SDLC = Software Development Life Cycle
ຂັ້ນຕອນຂອງການພັດທະນາຊອບແວ (ກ່ອນຈະພັດທະນາຊອບແວ ໃດໜຶ່ງຈະຕ້ອງດໍາເນີນການຕາມຂັ້ນຕອນຕ່າງໆດັງນີ້:)
1. ເກັບກໍາຂໍ້ມູນ (Data Collection)
2. ອອກແບບລະບົບ (System Design)
	a. ອອກແບບລະບົບຖານຂໍ້ມຸນ (ດ້ານແນວຄິດ, ດ້ານຕັກຕະສາດ, ວັດຖຸ)
(Database Design Conceptual, Logical, Physical Database Design)
	b. ອອກແບບໜ້າຕາຂອງຊອບແວ (Screen Design)
	c. ອອກແບບລະບົບເຄືອຂ່າຍ
3. ພັດທະນາຊອບແວ
	a. ທີມງານ (Teamwork)
	b. ເລືອກນໍາໃຊ້ເຕັກໂນໂລຊີ (ລະບົບປະຕິບັດການ, ຮາດແວ, ຊອບແວ, ພາສາໂປຣມແກຣມມິ່ງ, ຖານຂ້້ມູນ)
4 ທົດລອງນໍາໃຊ້,ກວດແກ້ ຂ້ຜິດພາດ (ຖ້າມີ)
5. ເອົານໍາໃຊ້ວົງຈິງນໍາໃຊ້ຄຽງຄູ່ກັບລະບົບເກົ່າ, ຫຼື ນໍາໃຊ້ ລະບົບໃໝ່ທັນທີ)
6. ກວດແກ້ຂໍ້ຜິດພາດຖ້າມີ
7 .ຝືກອົບຮົມພະນັງງານ (ຜູ້ບໍລິຫານ, ເຕັກນິກ, ຜູ້ນໍາໃຊ້)
8. ມອບຊອບແວໃຫ້ເຈົ້າຂອງໂຄງການ
9. ເຊັນສັນຍາ ການບໍາລຸງຮັກສາ (ມູນຄ່າ 8-15% ຂອງມູນຄ່າໂຄງການ)

ຕົວຢ່າງ: ລະບົບຂໍ້ມູນຂ່າວສານໃນອົງກອນ
1. ລະບົບບໍລິຫານ ປະຊາກອນ
	a.ປື້ມສໍາມະໂນຄົວ
	b.ບັດປະຈໍາຕົວ
2. ໃບຂັບຂີ່
3. ທະບຽນລົດ
4. ທີ່ດິນ
5. ທະບຽນການຄ້າ
6. ທະບຽນອາກອນ
7. ລະບົບຕໍາຫຼວດກວດຄົນເຂົ້າເມືອງ
8. ລະບົບບໍລິຫານພະນັກງານ ແລະ ເງິນເດືອນ
9. ລະບົບໃບບິນໄຟຟ້າ
10. ລະບົບໃບບິນ ນໍ້າປະປາ
11. ລະບົບບໍຫານຄົນເຈັບ ໂຮງໝໍ
12. ລະບົບບໍລິຫານໂຮງແຮມ
13. ລະບົບບໍລິຫານການຂາຍ (ຂາຍເຄື່ອງກໍ່ສ້າງ)
14. ລະບົບຂົນສົ່ງ
-----------------------------

ລະບົບບໍລິຫານພະນັກງານ ແລະ ເງິນເດືອນ
ການດໍາເນີນວຽກງານ ພວກເຮົາມີປັດໃຈທີ່ສໍາຄົນດັ່ງນີ້:
- ຄົນ
- ເງິນ
- ວັດສະດຸອຸປະກອນ
ການບໍລິຫານທຸລະກິດ ຄືການບໍລິຫານຄົນ (ພະນັກງານ)
- ບໍລິຫານຄົນ ຈະຕ້ອງບໍລິຫານຫຍັງແດ່?
- ເວລາໄປສະໝັກວຽກໃນອົງການຈັດຕັ້ງລັດ ຫຼື ຫົວໜ່ວຍທຸລະກິດຈະຕ້ອງປະກອບເອກະສານຫຍັງແດ່?
 ເອກະສານປະກອບມີດັ່ງນີ້:
- ຊີວະປະຫວັດ
- ປື້ມສໍາມະໂນຄົວ, ບັດປະຈໍາຕົວ (ກັອບປີ້)
- ໃບສະໝັກງານ (ຄໍາຮ້ອງຂໍສະໝັກງານ)
- ໃບກວດສຸຂະພາບ
- ໃບແຈ້ງໂທດ
-​ ໃບປະກາດສະນີຍາບັດ, ໃບຢັ້ງຢືນ,.......
- ໃບຄະແນນ
- ໃບຜ່ານງານ (ຖ້າມີ)

ລະບົບຕາຕະລາງຖານຂໍ້ມູນ:
ຂໍ້ມູນສ່ວນບຸກຄົນ: (ລະຫັດພະນັກງານ, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ລະຫັດບ້ານ, ລະຫັດເມືອງ, ລະຫັດແຂວງ, ລະຫັດພໍ່, ລະຫັດແມ່, ວຸທິການສຶກສາ, ວິຊາສະເພາະ, ຮູບ, ລະຫັດພະແນກ, ຊົນເຜົ່າ, ສາສະໜາ, ເຊື້ອຊາດ, ສັນຊາດ, ເຮືອນເລກທີ, ລະຫັດບັດປະຈໍາຕົວ)

ຂໍ້ມູນແຂວງ: (ລະຫັດແຂວງ, ຊື່ແຂວງ)
ຂໍ້ມູນເມືອງ: (ລະຫັດເມືອງ, ຊື່ເມືອງ, ລະຫັດແຂວງ)
ຂໍ້ມູນບ້ານ: (ລະຫັດບ້ານ, ຊື່ບ້ານ, ລະຫັດເມືອງ, ລະຫັດແຂວງ)

ພະແນກທີ່ສັງກັດ: (ລະຫັດພະແນກ, ຊື່ພະແນກ)

ຂໍ້ມູນເງິນເດືອນ: (ລໍາດັບ, ລະຫັດພະນັກງານ, ເງິນເດືອນພື້ນຖານ, ເງິນທີ່ຖືກຫັກ, ເງິນຊັ້ນ, ເງິນຂັ້ນ, ເງິນອຸດໜຸນ, ເງິນໜ້າທີ່, ອື່ນໆ, ເງິນລວມ)
ຂໍ້ມູນເບິກຈ່າຍເງິນເດືອນ: (ລໍາດັບ, ລະຫັດພະນັກງານ, ເບີກຈ່າຍວັນທີ, ເດືອນ, ຈໍານວນເງິນ)
ລະບົບການມາການ (ລໍາດັບ, ລະຫັດພະນັກງານ, ໂມງເຂົ້າຕອນເຊົ້າ, ອອກ, ເຂົ້າຕອນບ່າຍ, ອອກ)

ລະບົບຕໍາຫຼວດກວດຄົນເຂົ້າເມືອງ
ຜູ້ໂດຍສານ, ນັກເດິນທາງ:
ໜັງສືເດີນທາງ (Passport), ປື້ມຜ່ານແດນ, ໜັງສືຜ່ານແດນຊົ່ວຄາວ
ສັນຊາດລາວ: ປະເທດທີ່ຕ້ອງການວີຊ່າ (ສະເພາະທ່ອງທ່ຽວ)
ປະເທດໃນອາຊຽນ:
ຮ່ອງກົງ
ຣັດເຊຍ (2 ອາທິດ)
---ປະເພດວີຊ່າ(Visa), ຜ່ານສະຖານທູດ ຫຼື ວີຊ່າກັບດ່ານ
------------------------------------------------
ກະຊວງປ້ອງກັນຄວາມສະຫງົບ-------------------ດ່ານຕ່າງໆໃນທົ່ວປະເທດ
(ກົມຕໍາຫຼວດກວດຄົນເຂົ້າເມືອງ)
ກົມ ຕມ
ຖານຂໍ້ມູນ:
ຂໍ້ມູນດ່ານ: (ລະຫັດດ່ານ, ຊື່ດ່ານ, ບ້ານ, ເມືອງ, ແຂວງ)
ຂໍ້ມູນຜູ້ໂດຍສານ: (ໜັງສືຜ່ານແດນເລກທີ, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ທີ່ຢູ່, ປະເທດ, ໜັງສືເດີນທາງອອກວັນທີ, ວັນໝົດອາຍຸ, ......)
ຂໍ້ມູນເຂົ້າປະເທດ: (ລໍາດັບ, ໜັງສືຜ່ານແດນເລກທີ, ເຂົ້າມາວັນທີ, ເວລາເຂົ້າ, ທີ່ພັກຢູ່ລາວ, ໂທ, ຈຸດປະສົງຂອງການເດີນທາງ, ກໍານົດເວລາຢູ່ລາວ, ລະຫັດດ່ານ)
ຂໍ້ມູນອອກ:(ລໍາດັບ, ໜັງສືຜ່ານແດນເລກທີ, ເຂົ້າມາວັນທີ, ເວລາອອກ, ລະຫັດດ່ານ)
ຂໍ້ມູນເຈົ້າໜ້າທີ່ (ພະນັກງານດ່ານ): (ລະຫັດ, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ຮູບພາບ...)

ລະບົບບໍຫານຄົນເຈັບ ໂຮງໝໍ
ຈຸດປະສົງ: 
- ເພື່ອໃຫ້ຮູ້ວ່າ ຄົນເຈັບ ທີ່ມາໂຮງໝໍ ເປັນພະຍາດຫຍັງແດ່?   ມາແຕ່ ບ້ານ, ເມືອງ ໃດແດ່?
- ເພື່ອຕ້ອງການຮູ້ວ່າ ຄົນເຈັບຄົນນີ້ ແມ່ນທ່ານໝໍຄົນໃດ ເປັນຜູ້ກວດ, ແລະວາງຢາຫຍັງໃຫ້ກິນ, ມີຢາຫຍັງແດ່
- ຄົນເຈັບທີ່ມາໂຮງໝໍ ມີເກນອາຍຸ ເທົ່າໃດ, ຍິງຈັກຄົນ, ຊາຍຈັກຄົນ
- ອື່ນໆ...
ຂໍ້ມູນສະຫຼຸບ:
- ມີຄົນເຈັບທີ່ນອນໂຮງໝໍ ທັງໝົດຈັກຄົນ, ໃຜແດ່, ຢູ່ພະແນກໃດ, ເປັນພະຍາດຫຍັງ
- ຄົນເຈັບທີ່ເຂົ້າມາກວດ ແລະ ກັບ ມີຈັກຄົນ, ມີໃຜແດ່?
- ຂໍ້ມູນການເສຍຊີວິດ, ສາເຫດການເສຍຊີວິດ
- ລາຍຮັບທັງໝົດ ຈາກການບໍລິການຄົນເຈັບ ເທົ່າໃດ, ໃຫ້ສາມາດແຍກຕາມພະແນກໄດ້
- ລາຍຮັບທັງໝົດ ຫ້ອງນອນຄົນເຈັບ, ລາຍຮັບຈາກການຂາຍຢາ, ຈາກການກວດທົ່ວໄປ, 
- ພະຍາດຫຍັງ ທີ່ລະບາດຫຼາຍກວ່າໝູ່?  ຢູ່ບ້ານ, ເມືອງ, ແຂວງໃດ?
----------------------------------------------
ຂໍ້ມູນ ທີ່ນໍາມາອອກແບບຖານຂໍ້ມູນ ເພື່ອສ້າງລະບົບບໍລິຫານຄົນເຈັບ
ລະບົບການບໍລິຫານຄົນເຈັບ:
ຄົນເຈັບມາໂຮງໝໍ ----------ພາຍາບານເອົາຂໍ້ມູນ------------------ວັດແທກຄວາມດັນ, ລວງສູງ, ນໍ້າໜັກ ------ ລໍຖ້າທ່ານໝໍ ------------- ເຂົ້າພົບທ່ານໝໍ ແລະ ບົ່ງມະຕິພະຍາດ ------------- ຖ້າບໍ່ເປັນແຮງ -------- ທ່ານໝໍວາງຢາໃຫ້ກິນ ແລ້ວກັບບ້ານ
---------------- ຖ້າອາການໜັກ ------------ ທ່ານໝໍວາງຢາໃຫ້ --------------- ໃຫ້ນອນຕິດຕາມອາການ ----------- ຫ້ອງນອນ
ຂໍ້ມູນຄົນເຈັບ: (ລະຫັດຄົນເຈັບ,​ ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ບ້ານ, ເມືອງ, ແຂວງ, ໂທ, ໝາຍເຫດ, ສະຖານະ)
ອາການເບື້ອງຕົ້ນ: (ລດ, ລະຫັດຄົນເຈັບ, ອາການ, ໝາຍເຫດ) (ຄວາມດັນສະເລ່ຍ: 80/60, 120/80 ຜິດປົກະຕິ 130/52,140/90) (ອັດຕາການເຕັ້ນຂອງຫົວໃຈປົກະຕິສະເລ່ຍ: 50-85 ຖ້າເລ່ນກິລາ:75-160)
ກວດອາການເບື້ອງຕົ້ນ:​ (ລະຫັດຄົນເຈັບ, ຄວາມດັນ, ນໍ້າໜັກ, ລວງສູງ, ອາຈົມ, ຍ່ຽວ, ເລືອດ, ໝາຍເຫດ)
ຂໍ້ມູນທ່ານໝໍ: (ລະຫັດທ່ານໝໍ, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ຊ່ຽວຊານ, ໝາຍເຫດ)
ຂໍ້ມູນບົ່ງມະຕິ: (ລດ, ລະຫັດຄົນເຈັບ, ລະຫັດທ່ານໝໍ, ພະຍາດທີ່ບົ່ງມະຕິ, 
ຂໍ້ມູນການສັ່ງຢາ: (ລດ, ລະຫັດຄົນເຈັບ, ລະຫັດທ່ານໝໍ, ປະເພດຢາ, ໝາຍເຫດ)
ຫ້ອງນອນ: (ເລກທີຫ້ອງນອນ, ຫ້ອງນອນ, ລາຄາ, ສະຖານະ)
ຄົນເຈັບເຂົ້າໃນຫ້ອງນອນ: (ລໍາດັບ, ເລກທີຫ້ອງນອນ, ລະຫັດຄົນເຈັບ, ວັນທີ)
ຂໍ້ມູນຜູ້ເສຍຊີວິດ: (ລໍາດັບ, ລະຫັດຄົນເຈັບ, ວັນທີ, ເວລາ, ສາຍເຫດການເສຍຊີວິດ)
ລະບົບໃບບິນ: (ເລກທີໃບບິນ, ລະຫັດຄົນເຈັບ, ລາຍລະອຽດ, ຈໍານວນ, ລາຄາ, ເປັນເງິນ)

ລະບົບຂົນສົ່ງ ສິນຄ້າ -----> logistics
ຈຸດປະສົງ:
- ເພື່ອນໍາໃຊ້ ລະບົບການສົ່ງສິນຄ້າ ທີ່ທັນສະໄໝ, ສາມາດຕິດຕາມການເຄື່ອນໄຫວ ຂອງສິນຄ້າ ຈາກຈຸດໜຶ່ງໄປຫາອີກຈຸດໜຶ່ງໄດ້ທັນທີ
ຂໍ້ມູນສະຫຼຸບ:
- ຕ້ອງສະຫຼຸບ ລາຍຮັບ ຈາກການບໍລິການສົ່ງສິນຄ້າທຸກເວລາທີ່ຕ້ອງການ
- ສາມາດຕິດຕາມສິນຄ້າທີ່ຂົນສົ່ງໄປຫາແຕ່ລະຈຸດໄດ້ທັນທີ
- ອື່ນໆ...
ຂໍ້ມູນທີ່ນໍາມາພັດທະນາລະບົບ ການຂົນສົ່ງສິນຄ້າ
- ຂໍ້ມູນສາຂາ (ລະຫັດສາຂາ, ຊື່ສາຂາ, ທີ່ຢູ່ບ້ານ, ເມືອງ, ແຂວງ, ໝາຍເຫດ)
- ຂໍ້ມູນຜູ້ຝາກ (ລະຫັດ, ຊື່, ນາມສະກຸນ, ໂທ, ບ້ານ, ເມືອງ, ແຂວງ, ລະຫັດສາຂາ, ໝາຍເຫດ)
- ຂໍ້ມູນວັດສະດຸ (ລະຫັດ, ນໍ້າໜັກ, ຂະໜາດ, ຄ່າຝາກ, ລະຫັດສາຂາ, ໝາຍເຫດ)
- ຂໍ້ມູນຜູ້ຮັບ (ລະຫັດ, ຊື່, ນາມສະກຸນ, ເບີໂທ, ລະຫັດສາຂາ, ໝາຍເຫດ)
- ຂໍ້ມູນພະນັກງານ (ລະຫັດພະນັກງານ, ຊື່, ນາມສະກຸນ, ໂທ, ລະຫັດສາຂາ)

ສະຖາບັນການເງິນຈຸລະພາກ ທີ່ບໍ່ຮັບເງິນຝາກ:
ເປັນສະຖາບັນໃຫ້ບໍລິການ ກູ້ເງິນໃຫ້ແກ່ ທຸລະກິດຂະໜາດນ້ອຍ, ຂະໜາດກາງ, ຂະໜາດໃຫຍ່ ฝฝ(SME)
ເປັນສະຖາບັນທີ່ຂຶ້ນກັບ ທະນາຄານ ແຫ່ງ ສປປລາວ. ອັດຕາດອກເບ້ຍ ທີ່ທາງທະນາຄານກາງກໍານົດໃຫ້ປ່ອຍກູ້ 1-3% ຕໍ່ເດືອນ
ປະເພດຫຼັກຊັບຄໍ້າປະກັນ:
- ທີ່ດິນ, ເຮືອນ, ລົດ, ອື່ນໆ (ທີ່ເປັນວັດຖຸມີຄ່າ), ເງິນເດືອນ
ເອກະສານປະກອບໃນການກູ້ເງິນ: ຕົວຢ່າງ ຫຼັກຊັບຄໍ້າປະກັນ ເປັນທີ່ດິນ ແລະ ເຮືອນ
- ໃບຢັ້ງຢືນຄວາມຖືກຕ້ອງ ຂອງດິນ
- ການປະເມີນຫຼັກຊັບ: (ຫຼັກຊັບຄໍ້າປະກັນຕ້ອງມີມູນຄ່າ 3 ທົບ ຂອງເງິນທີ່ກູ້)
- ປື້ມສໍາມະໂນຄົນ, ບັດປະຈໍາຕົວ
- ສັນຍາເງິນກູ້ (ສະຖາບັນການເງິນ ເປັນຄົນຮ່າງໃຫ້)
-​ ຜູ້ຄໍ້າປະກັນ (ປື້ມສໍາມະໂນຄົວ, ບັດປະຈໍາຕົວ)
- ບົດວິພາກເສດຖະກິດ (ສະຖາບັນການເງິນຊ່ວຍແນະນໍາ ເຮັດຮ່ວມກັນ)
ໂຄງຮ່າງການຈັດຕັ້ງ:
- ປະທານ
- ອໍານວຍການ ຜູ້ 1 ຮັບຜິດຊອບລວມ
- ຮອງອໍານວຍການ ຜູ້ 1 ຮັບຜິດຊອບວຽກ ວິຊາການ (ດ້ານການເງິນ)
- ຮອງອໍານວຍການ ຜູ້ 2 ຮັບຜິດຊອບວຽກບໍລິຫານ ແລະ ພະນັກງານ
- ພະແນກ ສິນເສື່ອ, ປະເມີນຫຼັກຊັບ, ທວງໜີ້, ປະກອບເອກະສານກູ້ເງິນ
- ພະແນກບັນຊີ
- ພະແນກເງິນສົດ
- ພະແນກ ຂໍ້ມູນຂ່າວສານ (ICT) ດູແລລະບົບສະຖາບັນ, ລະບົບລາຍງານທະນາຄານກາງ, ພັດທະນາລະບົບ

ຂໍ້ມູນທີ່ຕ້ອງການໃນການພັດທະນາລະບົບ ສະຖາບັນການເງິນ ທີ່ບໍ່ຮັບເງິນຝາກ

ຂໍ້ມູນລູກຄ້າ: (ລະຫັດລູກຄ້າ, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ບ້ານ,​ ເມືອງ, ແຂວງ, ບັດປະຈໍາຕົວ, ສໍາມະໂນຄົວ, ເບີໂທ, ໝາຍເຫດ)
ຂໍ້ມູນຜູ້ຄໍ້າປະກັນ: (ລະຫັດຜູ້ຄໍ້າປະກັນ, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ບ້ານ, ເມືອງ, ແຂວງ,​ ບັດປະຈໍາຕົວ, ສໍາມະໂນຄົວ, ເບີໂທ, ໝາຍເຫດ)
ປະເພດຫຼັກຊັບຄໍ້າປະກັນ: (ລະຫັດປະເພດຫຼັກຊັບ, ຊື່ຫຼັກຊັບ)
ປະເພດທຸລະກິດ: ( ລະຫັດທຸລະກິດ, ປະເພດທຸລະກິດ, ອັດຕາດອກເບ້ຍ)
ຫຼັກຊັບຄໍ້າປະກັນ: (ລະຫັດຫຼັກຊັບ, ລະຫັດລູກຄ້າ, ລະຫັດຜູ້ຄໍ້າປະກັນ, ປະເພດຫຼັກຊັບ, ລາຍລະອຽດຫຼັກຊັບ, ມູນຄ່າເບື້ອງຕົ້ນ, ໝາຍເຫດ)
ຂໍ້ມູນເງິນກູ້: (ລະຫັດເງິນກູ້, ລະຫັດລູກຄ້າ, ວົງເງິນກູ້, ໄລຍະເວລາແຕ່ວັນທີ, ຫາວັນທີ, ອັດຕາດອກເບ້ຍ)
ຂໍ້ມູນການຈ່າຍງວດ: (ລດ, ລະຫັດເງິນກູ້, ວັນທີຈ່າຍ, ອັດຕາດອກເບ້ຍ, ຈໍານວນເງິນ)

ບັດປະຈໍາຕົວ (ID card)
ບັດປະຈໍາຕົວແມ່ນຫຍັງ? ເອກະສານທາງການ, ທີ່ນໍາໃຊ້ ຢັ້ງຢືນຕົວບຸກຄົນ
ເງື່ອນໄຂ ຜູ້ທີ່ເຈົ້າໜ້າທີ່ສາມາດອອກບັດປະຈໍາຕົວໄດ້ ມີບຸກຄົນໃດແດ່?
- ເປັນສັນຊາດລາວ, ອາຍຸ 18 ປີ ຂຶ້ນໄປ. 
- ຕ້ອງເປັນຄົນທີ່ມີຮ່າງກາຍສົມບູນ (ບໍ່ເປັນໃບ້ບ້າ, ເສຍຈິດ...)
ຈຸດປະສົງໃນການສ້າງລະບົບ:
- ເພື່ອໃຫ້ສາມາດກວດປະຫວັດບຸກຄົນໃດໜຶ່ງໄດ້ ເຊັ່ນ: ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ບ້ານເກີດ, ເມືອງ, ແຂວງ, ທີ່ຢູ່ບັດຈຸບັນ, ຂໍ້ມູນພໍ່, ຂໍ້ມູນແມ່, ຂໍ້ມູນອ້າຍເອື້ອຍນ້ອງ, ຂໍ້ມູນການກະທໍາຜິດອື່ນໆ (ຖ້າມີ)
- ເພື່ອຕ້ອງການຮູ້ວ່າ ຈໍານວນຄົນທັງໝົດ ທີ່ຖືບັດປະຈໍາຕົວມີຈັກຄົນ, ເປັນຍິງຈັກຄົນ, ໃຫ້ສາມາດແຍກຕາມ ບ້ານ, ເມືອງ, ແຂວງໄດ້, ແຍກຕາມອາຊີບໄດ້, ແຍກຕາມ ວຸດທິການສຶກສາໄດ້...
- ອື່ນໆ...
ເອກະສານປະກອບ ເພື່ອເຮັດບັດປະຈໍາຕົວ
- ປື້ມສໍາມະໂນຄົວ
- ປະກອບແບບຟອມ ທີ່ໄດ້ມາຈາກປກສ ແຂວງ(ເຊັນຜ່ານບ້ານ, ປກສເມືອງ, ແລະເອົາໄປແຂວງ)
(ຊີວະປະຫວັດສ່ວນບຸກຄົນ)

ຂໍ້ມູນທີ່ນໍາມາອອກແບບລະບົບຖານຂໍ້ມູນ
ລະຫັດບັດຄວນກໍານົດຕາມການແບ່ງເຂດການປົກຄອງດັ່ງນີ້:
ລະຫັດແຂວງ : xx
ລະຫັດເມືອງ : xx
ລະຫັດບ້ານ : xx
ລະຫັດບັດາ : xxxx
ຕົວຢ່າງ: ນະຄອນຫຼວງວຽງຈັນ, ເມືອງ, ຈັນທະບູລີ, ບ້ານ ສີຫອມ
	99 - 01 - 01- 0001
- ຂໍ້ມູນສ່ວນບຸກຄົນ (ລະຫັດບັດ, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ບ້ານເກີດ, ເມືອງເກີດ, ແຂວງເກີດ, ບ້ານຢູ່ປັດຈຸບັນ
ເມືອງ, ແຂວງ, ລະຫັດພໍ່, ລະຫັດແມ່, ລະດັບວັດທະນາທໍາ, ລະດັບວິຊາສະເພາະ, ລະຫັດລາຍນິ້ວ, ລະຫັດດວງຕາ, ຊົນເຜົ່າ, ເຊື້ອຊາດ, ສາສະໜາ)
- ຂໍ້ມູນພໍ່ (ລະຫັດພໍ່, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ທີ່ຢູ່ບ້ານ, ເມືອງ, ແຂວງ, ໂທ, ອາຊີບ, ຮູບ)
- ຂໍ້ມູນແມ່ (ລະຫັດແມ່, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ທີ່ຢູ່ບ້ານ, ເມືອງ, ແຂວງ, ໂທ, ອາຊີບ, ຮູບ)
- ຂໍ້ມູນອ້າຍເອື້ອຍນ້ອງ (ລະຫັດ, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ທີ່ຢູ່ບ້ານ, ເມືອງ, ແຂວງ, ໂທ, ອາຊີບ,ລະຫັດບັດ)
- ລາຍນິ້ວມື (ລດ, ລະຫັດບັດ, ຂວານິ້ວໂປ້, ຂວານິ້ວຊີ້, ຂວານິ້ວກາງ, ຂວານິ້ວນາງ, ຂວານິ້ວກ້ອຍ
					ຊ້າຍນິ້ວໂປ້, ຊ້າຍນິ້ວຊີ້, ຊ້າຍນິ້ວກາງ, ຊ້າຍນິ້ວນາງ, ຊ້າຍນິ້ວກ້ອຍ)
- ແຂວງ (ລະຫັດແຂວງ, ຊື່ແຂວງ)
- ເມືອງ (ລະຫັດເມືອງ, ຊື່ເມືອງ, ລະຫັດແຂວງ)
- ບ້ານ (ລະຫັດບ້ານ, ຊື່ບ້ານ, ລະຫັດເມືອງ, ລະຫັດແຂວງ)
- ຂໍ້ມູນການກະທໍາຜິດ (ລະຫັດ, ວັນທີ, ລາຍລະອຽດການກະທໍາຜິດ, ສະຖານທີ່, ໝາຍເຫດ)
- ຂໍ້ມູນບັດປະຈໍາຕົວ (ລະຫັດບັດ, ອອກໃຫ້ວັນທີ, ຫາວັນທີ, ໝາຍເຫດ)

ລະບົບ ໃບບິນ ນໍ້າປະປາ  (Water Billing System)
- ກ່ອນຈະເອົານໍ້າເຂົ້າເຮືອນ ຕ້ອງປະກອບເອກະສານຫຍັງແດ່?
	+ ແບບຟອມຈາກບໍລິສັດ ນໍ້າປະປາລາວ
	+ ໃບຢັ້ງຢືນທີ່ຢູ່
	+ ປື້ມສໍາມະໂນຄົວ, ບັດປະຈໍາຕົວ
	+ ແຕ້ມແຜນວາດ ບ່ອນທີ່ຈະຕິດຕັ້ງຢູ່ເຮືອນ
- ຫຼັງຈາກເອກະສານ ສໍາເລັດ ບໍລິສັດ ນໍາເອົາກົງຕິ ມາຕິດຕັ້ງໃຫ້ຢູ່ບ້ານ
ຂໍ້ມູນທີ່ຕ້ອງການ
ຂໍ້ມູນຜູ້ນໍາໃຊ້ນໍ້າ (ລະຫັດຜູ້ນໍາໃຊ້, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ບ້ານ, ເມືອງ, ແຂວງ, ໂທ, ເລກທີເຮືອນ, ຖະໜົນ, ຮ່ອມ, ຄຸ້ມ, ໜ່ວຍ)
ຂໍ້ມູນກົງເຕີ (ລະຫັດກົງເຕີ, ຂະໜາດກົງເຕີ, ຄ່າເຊົ່າ)
ອັດຕາຄ່ານໍ້າ (ລະຫັດ, ອັດຕາຄ່ານໍ້າ, ໝາຍເຫດ)
ການນໍາໃຊ້ນໍ້າ (ລະຫັດ, ວັນທີ, ຈົດຄັ້ງກ່ອນ, ຈົດຄັ້ງນີ້, ບໍລິມາດນໍາໃຊ້, ຈໍານວນເງິນ, ປະຈໍາເດືອນ, ໝາຍເຫດ)
ໃບບິນ (ລະຫັດຜູ້ນໍາໃຊ້, ລະຫັດ, ບໍລິມາດນໍາໃຊ້, ຈໍານວນເງິນ, ປະຈໍາເດືອນ, ວັນທີ, ໝາຍເຫດ)
ຂໍ້ມູນການຈ່າຍເງິນ (ລະຫັດຜູ້ນໍາໃຊ້ນໍ້າ, ວັນທີຈ່າຍ, ບໍລິມາດ, ຈໍານວນເງິນ, ປະຈໍາເດືອນ, ໝາຍເຫດ)
ຂໍ້ມູນພະນັກງານ (ລະຫັດ,​ ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ຊື່ຜູ້ນໍໍາໃຊ້, ລະຫັດຜ່ານ, ສະຖານະ, ໝາຍເຫດ)

ໃບຂັບຂີ່ (Driver's License)
ຈຸດປະສົງ:
- ເພື່ອໃຫ້ຮູ້ວ່າ ຜູ້ມີໃບອະນຸຍາດຂັບຂີ່ມີໃຜແດ່, ຢູ່ບ້ານ, ເມືອງ, ແຂວງໃດ, ຈໍານວນຈັກຄົນ, ຍິງຈັກຄົນ, ຊາຍຈັກຄົນ
- ເພື່ອໃຫ້ສາມາດຄົ້ນປະຫວັດ ຂອງຜູ້ທີ່ຖື ໃບຂັບຂີ່ໄດ້.
ປະເພດໃບຂັບຂີ່:
A --- ຈັກ
B --- ເບົາ 4 ລໍ້
C --- 
D
E
...
ຂໍ້ມູນທີ່ຕ້ອງການໃນການອອກໃບຂັບຂີ່
ລະຫັດໃບຂັບຂີ່
ລະຫັດແຂວງ xxx
ເມືອງ		 xx
ບ້ານ		 xx
ລະຫັດຜູ້ຖືບັດ  xxxx
ແຂວງວຽງຈັນ, ເມືອງໂພນໂຮງ, ບ້ານໂພນໂຮງ, ລະຫັດໃບຂັບຂີ່
	88		01			01		0001 --> 8801010001
ຂໍ້ມູນຜູ້ຖືໃບຂັບຂີ່ (ລະຫັດຜູ້ຖືໃບຂັບຂີ່, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ບ້ານ, ເມືອງ, ແຂວງ, ໂທ, ຮູບພາບ, ໝາຍເຫດ)
ປະເພດໃບຂັບຂີ່ (ລະຫັດປະເພດ, ປະເພດໃບຂັບຂີ່, ໝາຍເຫດ)
ໃບຂັບຂີ່ (ລະຫັດໃບຂັບຂີ່, ລະຫັດຜູ້ຖືໃບຂັບຂີ່, ລະຫັດປະເພດ, ອອກວັນທີ, ໝົດກໍານົດວັນທີ, ລະຫັດຜູ້ນໍາໃຊ້)
ຂໍ້ມູນການຕໍ່ (ລະຫັດໃບຂັບຂີ່, ວັນທີ, ຕໍ່ຄັ້ງທີ, ແຕ່ວັນທີ, ຫາວັນທີ, ລະຫັດຜູ້ນໍາໃຊ້, ໝາຍເຫດ)
ແຂວງ (ລະຫັດແຂວງ. ຊື່ແຂວງ)
ເມືອງ (ລະຫັດເມືອງ, ຊື່ເມືອງ, ລະຫັດແຂວງ)
ບ້ານ (ລະຫັດບ້ານ, ຊື່ບ້ານ, ລະຫັດເມືອງ, ລະຫັດແຂວງ)
ຜູ້ນໍາໃຊ້ (ລະຫັດຜູ້ນໍາໃຊ້, ຊື່, ນາມສະກຸນ, ວັນເດືອນປີເກີດ, ຊື່ຜູ້ນໍາໃຊ້, ລະຫັດຜ່ານ, ຮູບພາບ, ໝາຍເຫດ)
-------------------------------------------
ວິທີການເກັບກໍາຂໍ້ມູນເພື່ອນໍາມາ ອອກແບບລະບົບ ແລະ ພັດທະນາຊອບແວ
ຕົວຢ່າງ: ຕ້ອງການພັດທະນາລະບົບ ບໍລິຫານພະນັກງານ ແລະ ເງິນເດືອນ ຂອງອົງການຈັດຕັ້ງໃດໜຶ່ງ
ຂໍ້ມູນທີ່ຄວນຮູ້ມີດັ່ງນີ້:
1. ຊື່ອົງການຈັດຕັ້ງ
2. ໜ້າທີ່, ພາລະບົດບາດ
3. ໂຄງຮ່າງການຈັດຕັ້ງ
4. ໜ້າທີ່ຮັບຜິດຊອບ ຂອງແຕ່ລະໜ່ວຍງານ
5. ລະບົບການບໍລິຫານພະນັກງານປັດຈຸບັນເຮັດແນວໃດ?
	a.ການປະກອບເອກະສານສະໝັກງານ
	b.ລະບົບເງິນເດືອນ
ຕົວຢ່າງ2: ລະບົບບໍລິຫານໂຮງແຮມ
1. ໂຮງແຮມແມ່ນຫຍັງ?
2. ໂຄງຮ່າງການຈັດຕັ້ງ
3. ໜ້າທີ່ຮັບຜິດຊອບຂອງແຕ່ລະໜ່ວຍງານ
4. ລະບົບການບໍລິຫານຫ້ອງເຮັດແນວໃດ?
5. ລະບົບການບໍລິຫານ ແຂກ ມາພັກເຮັດແນວໃດ?
6. ບໍລິຫານ ຊັບສົມບັດ ໃນຫ້ອງນອນເຮັດແນວໃດ